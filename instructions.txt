Hi Sahil,
I hope this email finds you well. I'm reaching out with an exciting frontend development opportunity for you. We need a skilled React developer to create a modern AI agent experience application within a 3-hour timeframe.
📌 Project Overview
Build a modern, responsive React application simulating an AI agent experience. The interface includes dual video backgrounds, animated transitions, and a chat UI — using mock data, with focus on smooth UX and clear structure.

🔧 Technology Stack
React 19 + TypeScript (with Vite)

Tailwind CSS (for styling and layout)

Redux Toolkit (for state management)

React Router DOM (routing)

Framer Motion (animations)

React Icons (iconography)

📁 Folder Structure
src/
├── components/
│   ├── ui/                  # Reusable UI components
│   ├── LandingPage.tsx      # Video-based landing screen
│   ├── ChatWindow.tsx       # Main agent interface
│   └── Conversation.tsx     # Chat message display
├── config/
│   └── templates/           # Template configurations
├── store/
│   ├── appSlice.ts
│   └── conversationSlice.ts
├── types/
│   ├── Template.ts
│   └── Message.ts
├── assets/
│   └── videos/, images/, logos/
└── App.tsx
⏱️ 3-Hour Task Breakdown
🕐 Hour 1: Setup & Core Config
1.1 Project Initialization (15 mins)

Vite + React + TypeScript setup

Tailwind CSS config + custom animations

Install dependencies

1.2 Type Definitions (15 mins)

TemplateContent and TemplateStylesin types/Template.ts

1.3 Redux Store Setup (15 mins)

appSlice.ts: agent data, user state

conversationSlice.ts: UI state (speaking, mute)

Configure and export store

1.4 Template Config (15 mins)

template1.ts with mock data, videos, text, colors, styles

🕑 Hour 2: Landing Page + UI Components
2.1 LandingPage (30 mins)

Dual video autoplay with fade transition

Animated heading/subheading + logo

CTA buttons trigger video change & route to /agent

Framer Motion animations

Responsive layout

2.2 UI Components (15 mins)

AnimatedButton.tsx, SolidButton.tsx, Loader.tsx

2.3 Routing Setup (15 mins)

/:agentId → Landing Page

/:agentId/agent → Chat Window

Default route redirect to /raisa

🕒 Hour 3: Chat Interface & Conversation Logic
3.1 ChatWindow (30 mins)

Avatar with glowing animation

Header with logo + close/back button

Fullscreen responsive layout

Support for embedded mode

3.2 Conversation Component (20 mins)

Display mock messages (user/assistant roles)

Microphone icon (fake states: recording, mute, speaking)

Scroll-to-bottom + loading animation

3.3 Final Polish (10 mins)

Responsive tests

Error handling (video fallback, undefined states)

Framer Motion transitions

📂 Sample

Reference  - https://agent.amplitech.ai/97aa9640-6164-468b-8a21-116a9e82202c 
(You can get assets from this URL itself. Consider this as template 1 ).

You can create template 2 by your choice. 

🔍 Key Features
✔️ Landing Page
Dual video autoplay + smooth transition

Animated heading/subheading

Company logo

Responsive + mobile-first layout

✔️ Chat Interface
Avatar glow animation

Mock message bubbles

Microphone UI with visual states

Responsive layout and back/close behavior

✔️ Template System
Style + content separation via template1.ts

Customizable via TemplateContent and TemplateStyles

🚀 Success Criteria
✅ App compiles with no TypeScript errors

✅ Landing page + chat page functional

✅ Animations smooth (Framer Motion)

✅ Mobile responsiveness verified

✅ Voice UI states working (mock)

✅ Video transitions and routing function correctly

✅ No console warnings or crashes

📌 Developer Notes
Use mock data only — no voice processing or real chat logic required.

Emphasize animation polish and responsiveness.

Keep code clean, modular, and extensible.

Focus on user journey: video → chat → interaction flow.

Please make sure to share the following upon completion:

✅ GitHub Repository

Push the full working project to a public or private GitHub repo

Include a clear README.md with setup instructions (Vite, install, run)

✅ Screen Recording

Record a 2–4 minute walkthroughof the app showcasing:

Landing page experience with dual video background

Transition into chat interface

Chat UI features, animations, and responsiveness

Use any screen recorder (Loom, OBS, etc.)

Share the video link or upload with delivery

🔁 This ensures we can verify the full user experience quickly without needing to run locally.



I'm excited to see what you create! This is a great opportunity to showcase your React skills and build something truly engaging. 

I would expect you to share by 10 PM Today.

Best regards,

Saket

